 			  	‚ñ† Python

IDLE: Entorno integrado de programaci√≥n que se instala autom√°ticamente cuando instalas Python

¬øQu√© puede hacer IDLE?
Escribir, Editar, Ejecutar.

METODOS DE LAS CADENAS DE CARACTERES:

‚Ä¢ Capitalize Retorna una copia de la cadena con el primer car√°cter en may√∫sculas y el resto de min√∫sculas.
cadena.capitalize().

Permiten encontrar caracteres o cadenas dentro de otra:
‚Ä¢ Find
‚Ä¢ index

Retorna true o false:
Si solo contiene caracteres alfaNumericos:
‚Ä¢ isalnum

Si solo contiene caracteres alfab√©ticos:
‚Ä¢ isalpha

Si solo contiene caracteres decimales:
‚Ä¢ isdecimal

Si solo contiene d√≠gitos:
‚Ä¢ isdigit

Si solo contiene caracteres en min√∫sculas:
‚Ä¢ islower

Si solo contiene caracteres en may√∫sculas:
‚Ä¢ isupper

Retorna una copia en min√∫sculas de la cadena de caracteres.
‚Ä¢ lower

Retorna una copia en may√∫sculas de la cadena de caracteres.
‚Ä¢ upper

OPERADORES ARITMETICOS:
‚Ä¢ =
‚Ä¢ -=
‚Ä¢ /=
‚Ä¢ //=
‚Ä¢ +=
‚Ä¢ *=
‚Ä¢ **=
‚Ä¢ %=

								LISTAS:
['a', 'b', 'c'...]
[1, 2, 3...]

‚úÖ Sintaxis b√°sica:
mi_lista = [10, "hola", True, 3.14]

üîß Operaciones comunes con listas:
1. Acceder a elementos:
print(mi_lista[0])  |  # 10
print(mi_lista[-1]) |  # 3.14 (√∫ltimo elemento)

2. Modificar un valor:
mi_lista[1] = "mundo"

3. Agregar elementos:
mi_lista.append("nuevo")     |  # Al final
mi_lista.insert(1, "medio")  |  # En √≠ndice espec√≠fico

4. Eliminar elementos:
mi_lista.remove("mundo") | # Por valor
mi_lista.pop()           | # √öltimo
mi_lista.pop(0)          | # Por √≠ndice
del mi_lista[2]          | # Tambi√©n por √≠ndice

5. Longitud de una lista:
len(mi_lista)

6. Recorrer con un bucle:
for item in mi_lista:
    print(item)

7. Verificar si un valor est√°:
"hola" in mi_lista | # True o False

üß† Otras funciones √∫tiles:
M√©todo		    Descripci√≥n
lista.sort()	|   Ordena (modifica la lista).
sorted(lista)	|   Ordena (sin modificar la original).
lista.reverse()	|   Invierte el orden.
lista.copy()	|   Copia la lista.
lista.clear()	|   Borra todos los elementos.
lista.count(x)	|   Cuenta cu√°ntas veces aparece x.
lista.index(x)	|   Devuelve el √≠ndice de x.
lista.extend(otra_lista)  |  Extender la lista agreg√°ndole los elementos de otra lista.

							TUPLA
Estructura de datos inmutable que contiene una secuencia ordenada de elementos.
Se pueden acceder con sub√≠ndices.

CARACTERISTICAS:
secuencia ordenada de valores.
Puede contener valores de cualquier tipo de datos.
puede contener valores de distintos tipos de datos.
Cada posici√≥n de la tupla se identifica con un entero denominado 'indice'.
Es inmutable. No puede ser modificada.

							Archivos
Modos de apertura de Archivos:
‚Ä¢ r (read - leer)
‚Ä¢ w (write - escribir)
‚Ä¢ a (append - a√±adir)
‚Ä¢ Agregar un + incluye leer. por ejemplo: w+ es leer y escribir.

# Leer el archivo.
  with open('nombre_archivo.text', 'r') as archivo: 
    for linea in archivo:
      print('=== Frase ===')
      print(linea)
      
  # Escribir en el archivo.
  with open('nombre_archivo.txt', 'w') as archivos: print










menor = 2 















